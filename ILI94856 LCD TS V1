// Adafruit GFX Libraries
#include "Adafruit_GFX.h"
#include "MCUFRIEND_kbv.h"
MCUFRIEND_kbv tft;

// You can include several fonts but WARNING! They take up a lot of space.
#include "Fonts/FreeSansBold24pt7b.h"
#include "Fonts/FreeMono18pt7b.h"
#include "Fonts/FreeMonoBoldOblique18pt7b.h"
#include "Fonts/FreeSerifBold18pt7b.h"
#include "Fonts/FreeMonoBold12pt7b.h"  

// Adafruit Touch screen library (if required)
#include <TouchScreen.h>

#define LCD_CS A3     // Chip Select goes to Analog 3
#define LCD_RS A2     // Command/Data goes to Analog 2
#define LCD_WR A1     // LCD Write goes to Analog 1
#define LCD_RD A0     // LCD Read goes to Analog 0
#define LCD_RESET A4  // Can alternately just connect to Arduino's reset pin

// Assign human-readable names to some common 16-bit colour values:
#define BLACK 0x0000
#define NAVY 0x000F
#define DARKGREEN 0x03E0
#define DARKCYAN 0x03EF
#define MAROON 0x7800
#define PURPLE 0x780F
#define OLIVE 0x7BE0
#define LIGHTGREY 0xC618
#define DARKGREY 0x7BEF
#define BLUE 0x001F
#define GREEN 0x07E0
#define CYAN 0x07FF
#define RED 0xF800
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF
#define ORANGE 0xFD20
#define GREENYELLOW 0xAFE5
#define PINK 0xF81F

// Make an array of those values too
int tftColours[] = {BLUE, RED, GREEN, CYAN, MAGENTA, YELLOW, WHITE};

// Create the TFT object with all pin assignments
// This leaves pins 2, 3, 4, 5 free. Also pin 12 if you don't use SD card.
//Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);

// Set up the touch screen element of the TFT screen
#define YP A3  // must be an analog pin, use "An" notation!
#define XM A2  // must be an analog pin, use "An" notation!
#define YM 9   // can be a digital pin
#define XP 8   // can be a digital pin
#define SENSITIVITY 300
#define MINPRESSURE 10
#define MAXPRESSURE 1000
TouchScreen ts = TouchScreen(XP, YP, XM, YM, SENSITIVITY);

//----------------------------------------------------------------------------
// SETUP      SETUP      SETUP      SETUP      SETUP      SETUP      SETUP
//----------------------------------------------------------------------------
void setup() {
  Serial.begin(9600);
  tft.reset();
uint16_t ID = tft.readID();
tft.begin(ID);
  tft.setRotation(1);
  randomSeed(analogRead(A1));
}

//----------------------------------------------------------------------------
// LOOP      LOOP      LOOP      LOOP      LOOP      LOOP      LOOP      LOOP
//----------------------------------------------------------------------------
void loop() {

  tft.fillScreen(BLACK);
  
  tft.setCursor(80, 100);
  tft.setTextSize(1);
  tft.setTextColor(RED);
  tft.setFont(&FreeSansBold24pt7b);
  tft.println("ENGR 697G - 05");

  tft.setCursor(120, 200);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(1);
  tft.println("Final Project");

  tft.setCursor(190, 300);
  tft.setTextSize(1);
  tft.setTextColor(RED);
  tft.println("Demo");
  
  delay(4000);
  
  tft.fillScreen(BLACK);
  tft.setCursor(0, 50);
  tft.setTextColor(ORANGE);
  tft.setTextSize(1);
  tft.setFont(&FreeMonoBold12pt7b);
  tft.println("ENGR 697G-05 Engineering Design ");
  tft.println("             Project II - SP2021");
  tft.setTextColor(BLUE);
  tft.println("Instructor:");
  tft.setTextColor(GREEN);
  tft.println("Dr. Hamid Mahmoodi");
  
  tft.setCursor(0, 190);
  tft.setTextColor(YELLOW);
  tft.println("Smart Rotary Parking Team");
  tft.setTextColor(BLUE);
  tft.println("Team Member:");
  tft.setTextColor(GREEN);
  tft.print("Yunjie Li & Bao Chau");
  delay(5000);

//  tft.setTextColor(RED);
//  tft.setTextSize(1.5);
//  tft.setCursor(130, 220);
//  tft.print("Final Project Demo");
  delay(5000);
  tft.fillScreen(BLACK);

  for (int cnt=0; cnt< 3; cnt++) {
    tft.setCursor(120, 100);
    tft.setTextColor(getRandomColour());
    tft.setFont(&FreeSerifBold18pt7b);
    tft.setTextSize(3);
    tft.println("Hello!");


    tft.setFont(&FreeMonoBoldOblique18pt7b);
    tft.setTextSize(1);
    tft.setCursor(5, 160);
    tft.setTextColor(getRandomColour());
    tft.println("Welcome to");


    tft.setCursor(52, 220);
    tft.setFont(&FreeMonoBoldOblique18pt7b);
    tft.setTextColor(getRandomColour());
    tft.println("Smart Rotary");
    tft.setCursor(30, 260);
    tft.println("Parking System");
  }

  // Simple button
  // x, y, w, h, colour
  tft.fillRoundRect(340, 155, 125, 125, 3, WHITE);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(1);
  tft.setTextColor(RED);
  tft.setCursor(340, 235);
  tft.print("Enter");

  // User touches screen
  waitOneTouch();
}

unsigned int getRandomColour() {
  static unsigned int prevColour = 99;
  int colour;
  do {
    colour = random(0, sizeof tftColours / 2);
    } while (colour == prevColour);

  prevColour = colour;
  return tftColours[colour];
}

//----------------------------------------------------------------------------
// Has user touched the button?
//----------------------------------------------------------------------------
TSPoint waitOneTouch() {

  // Get a touch in the required button area (or anywhere if flag set)
  TSPoint p;
  do {
    p = ts.getPoint();
    pinMode(XM, OUTPUT);  // Pins configures again for TFT control
    pinMode(YP, OUTPUT);

  } while (p.z < MINPRESSURE || p.z > MAXPRESSURE );

  // All done, return the touch coordinates object
  return p;
}
