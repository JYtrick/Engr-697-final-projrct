// Adafruit GFX Libraries
#include "Adafruit_GFX.h"
#include "MCUFRIEND_kbv.h"
#include "TouchScreen.h"
MCUFRIEND_kbv tft;


// You can include several fonts but WARNING! They take up a lot of space.
#include "Fonts/FreeSansBold24pt7b.h"
#include "Fonts/FreeMono18pt7b.h"
#include "Fonts/FreeMonoBoldOblique18pt7b.h"
#include "Fonts/FreeSerifBold18pt7b.h"
#include "Fonts/FreeMonoBold12pt7b.h"  

// Fonts for loading pages Parking and Retrieving.
#include "Fonts/FreeSans9pt7b.h"
#include "Fonts/FreeSans12pt7b.h"
#include "Fonts/FreeSerif12pt7b.h"
#include "FreeDefaultFonts.h"
#define PI 3.1415926535897932384626433832795

// Adafruit Touch screen library (if required)
#include <TouchScreen.h>

#define LCD_CS A3     // Chip Select goes to Analog 3
#define LCD_RS A2     // Command/Data goes to Analog 2
#define LCD_WR A1     // LCD Write goes to Analog 1
#define LCD_RD A0     // LCD Read goes to Analog 0
#define LCD_RESET A4  // Can alternately just connect to Arduino's reset pin

// Assign human-readable names to some common 16-bit colour values:
#define BLACK 0x0000
#define NAVY 0x000F
#define DARKGREEN 0x03E0
#define DARKCYAN 0x03EF
#define MAROON 0x7800
#define PURPLE 0x780F
#define OLIVE 0x7BE0
#define LIGHTGREY 0xC618
#define DARKGREY 0x7BEF
#define BLUE 0x001F
#define GREEN 0x07E0
#define CYAN 0x07FF
#define RED 0xF800
#define MAGENTA 0xF81F
#define YELLOW 0xFFE0
#define WHITE 0xFFFF
#define ORANGE 0xFD20
#define GREENYELLOW 0xAFE5
#define PINK 0xF81F

// Make an array of those values too
int tftColours[] = {BLUE, RED, GREEN, CYAN, MAGENTA, YELLOW, WHITE};

// Create the TFT object with all pin assignments
// This leaves pins 2, 3, 4, 5 free. Also pin 12 if you don't use SD card.
//Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);
int x, y;

// Set up the touch screen element of the TFT screen
#define YP A3  // must be an analog pin, use "An" notation!
#define XM A2  // must be an analog pin, use "An" notation!
#define YM 9   // can be a digital pin
#define XP 8   // can be a digital pin
#define SENSITIVITY 300
#define MINPRESSURE 10
#define MAXPRESSURE 1000
TouchScreen ts = TouchScreen(XP, YP, XM, YM, SENSITIVITY);


//----------------------------------------------------------------------------
// Function for calculate the dots 
//----------------------------------------------------------------------------

int col[8];
void showmsgXY(int x, int y, int sz, const GFXfont *f, const char *msg)
{
  int16_t x1, y1;
  uint16_t wid, ht;
  tft.setFont(f);
  tft.setCursor(x, y);
  tft.setTextColor(0x0000);
  tft.setTextSize(sz);
  tft.print(msg);
}

//----------------------------------------------------------------------------
// SETUP      SETUP      SETUP      SETUP      SETUP      SETUP      SETUP
//----------------------------------------------------------------------------
void setup() {
  Serial.begin(9600);
  tft.reset();
  uint16_t ID = tft.readID();
  tft.begin(ID);
  tft.setRotation(1);
  randomSeed(analogRead(A1));
  
// Set up for loading loading pages
  //tft.invertDisplay(true);
//  tft.fillScreen(0xffff);
//  showmsgXY(170, 250, 2, &FreeSans9pt7b, "Parking...");
//  col[0] = tft.color565(155, 0, 50);
//  col[1] = tft.color565(170, 30, 80);
//  col[2] = tft.color565(195, 60, 110);
//  col[3] = tft.color565(215, 90, 140);
//  col[4] = tft.color565(230, 120, 170); 
//  col[5] = tft.color565(250, 150, 200);
//  col[6] = tft.color565(255, 180, 220);
//  col[7] = tft.color565(255, 210, 240);

     Retrieving();
  // Showing();
  // MenuPage();
  // ParkingPage();
}

//----------------------------------------------------------------------------
// LOOP      LOOP      LOOP      LOOP      LOOP      LOOP      LOOP      LOOP
//----------------------------------------------------------------------------
void loop() {
  
  

 //   tft.fillScreen(BLACK);
//
//    for (int cnt=0; cnt< 3; cnt++) {
//    tft.setCursor(120, 100);
//    tft.setTextColor(getRandomColour());
//    tft.setFont(&FreeSerifBold18pt7b);
//    tft.setTextSize(3);
//    tft.println("Hello!");
//
//
//    tft.setFont(&FreeMonoBoldOblique18pt7b);
//    tft.setTextSize(1);
//    tft.setCursor(5, 160);
//    tft.setTextColor(getRandomColour());
//    tft.println("Welcome to");
//
//
//    tft.setCursor(52, 220);
//    tft.setFont(&FreeMonoBoldOblique18pt7b);
//    tft.setTextColor(getRandomColour());
//    tft.println("Smart Rotary");
//    tft.setCursor(30, 260);
//    tft.println("Parking System");
//  }
//
//  // Simple button
//  // x, y, w, h, colour
//  tft.fillRoundRect(340, 155, 125, 125, 3, WHITE);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setTextColor(RED);
//  tft.setCursor(340, 235);
//  tft.print("Enter");
//
//  // User touches screen
//  waitOneTouch();
//  tft.fillScreen(BLACK);
  //tft.invertDisplay(true);
  //Parking();

  //tft.reset();
}


unsigned int getRandomColour() {
  static unsigned int prevColour = 99;
  int colour;
  do {
    colour = random(0, sizeof tftColours / 2);
    } while (colour == prevColour);

  prevColour = colour;
  return tftColours[colour];
}

//----------------------------------------------------------------------------
// Has user touched the button?
//----------------------------------------------------------------------------
TSPoint waitOneTouch() {

  // Get a touch in the required button area (or anywhere if flag set)
  TSPoint p;
  do {
    p = ts.getPoint();
    pinMode(XM, OUTPUT);  // Pins configures again for TFT control
    pinMode(YP, OUTPUT);

  } while (p.z < MINPRESSURE || p.z > MAXPRESSURE );

  // All done, return the touch coordinates object
  return p;
}


//----------------------------------------------------------------------------
// Creates Pages
//----------------------------------------------------------------------------
//void HomePage(){
//}
//
//void MenuPage(){
//  tft.fillScreen(BLACK);
//  tft.setTextColor(WHITE);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(115, 50);
//  tft.println("Main  Menu");
//  tft.drawFastHLine(0,60,480,RED);
//
//  tft.setCursor(155, 85);
//  tft.setTextColor(WHITE);
//  tft.setFont(&FreeMonoBold12pt7b);
//  tft.setTextSize(1);
//  tft.println("Select Options");
//  
//  //Button - Parking
//  tft.fillRoundRect(100,105,300,60,3,BLUE); 
//  tft.drawRoundRect(100,105,300,60,3,WHITE); 
//  tft.setTextColor(CYAN);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(165, 148);
//  tft.println("Parking");
//   
//  //Button - Retrieving
//  tft.fillRoundRect(100,175,300,60,3,BLUE);
//  tft.drawRoundRect(100,175,300,60,3,WHITE); 
//  tft.setTextColor(CYAN);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(140, 217);
//  tft.println("Retrieving");
//   
//  //Button - Exit
//  tft.fillRoundRect(100,245,300,60,3,BLUE); 
//  tft.drawRoundRect(100,245,300,60,3,WHITE); 
//  tft.setTextColor(CYAN);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(205, 290);
//  tft.println("Exit");
//}
//
//void ParkingPage(){
//  
//  tft.fillScreen(BLACK);
//  tft.setTextColor(WHITE);
//  tft.setFont(&FreeMonoBoldOblique18pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(25,40);
//  tft.println("Parking Confirmation");
//  tft.drawFastHLine(0,60,480,RED);
//
//  //Button - YES
//  tft.fillRoundRect(100,105,300,60,3,BLUE); 
//  tft.drawRoundRect(100,105,300,60,3,WHITE); 
//  tft.setTextColor(GREEN);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(210, 150);
//  tft.println("YES");
//   
//  //Button - NO
//  tft.fillRoundRect(100,210,300,60,3,BLUE); 
//  tft.drawRoundRect(100,210,300,60,3,WHITE); 
//  tft.setTextColor(RED);
//  tft.setFont(&FreeSansBold24pt7b);
//  tft.setTextSize(1);
//  tft.setCursor(210, 260);
//  tft.println("NO");
//} 
//
//void ReturnCarPage(){
//}
//
//void Parking(){
// // tft.invertDisplay(true);
//  tft.fillScreen(BLACK);
//  showmsgXY(170, 250, 2, &FreeSans9pt7b, "Parking...");
//  col[0] = tft.color565(155, 0, 50);
//  col[1] = tft.color565(170, 30, 80);
//  col[2] = tft.color565(195, 60, 110);
//  col[3] = tft.color565(215, 90, 140);
//  col[4] = tft.color565(230, 120, 170);
//  col[5] = tft.color565(250, 150, 200);
//  col[6] = tft.color565(255, 180, 220);
//  col[7] = tft.color565(255, 210, 240);
//
//  for (int i = 8; i > 0; i--) {
//  tft.fillCircle(240 + 40 * (cos(-i * PI / 4)), 120 + 40 * (sin(-i * PI / 4)), 10, col[0]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 1)*PI / 4)), 120 + 40 * (sin(-(i + 1)*PI / 4)), 10, col[1]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 2)*PI / 4)), 120 + 40 * (sin(-(i + 2)*PI / 4)), 10, col[2]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 3)*PI / 4)), 120 + 40 * (sin(-(i + 3)*PI / 4)), 10, col[3]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 4)*PI / 4)), 120 + 40 * (sin(-(i + 4)*PI / 4)), 10, col[4]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 5)*PI / 4)), 120 + 40 * (sin(-(i + 5)*PI / 4)), 10, col[5]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 6)*PI / 4)), 120 + 40 * (sin(-(i + 6)*PI / 4)), 10, col[6]); delay(15);
//  tft.fillCircle(240 + 40 * (cos(-(i + 7)*PI / 4)), 120 + 40 * (sin(-(i + 7)*PI / 4)), 10, col[7]); delay(15);
//}
//}
//

void Retrieving(){
  
  tft.fillScreen(BLACK);
  tft.setCursor(0, 43);
  tft.setTextColor(WHITE);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(1);
  tft.println("Parking Slot#:");
  //tft.print();

  
  tft.drawFastHLine(0,63,480,RED);

// Draw the upper row of buttons
  for (x=0; x<3; x++)
  {
  tft.fillRect(25+(x*110),85,95,95,BLUE);   
  tft.drawRect(25+(x*110),85,95,95,WHITE); 
  }

  tft.setCursor(45, 160);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("1");
  
  tft.setCursor(155, 165);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("2");

  tft.setCursor(265, 165);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("3");


// Draw the lower row of buttons
   for (x=0; x<3; x++)
  {
  tft.fillRect(25+(x*110),195,95,95,BLUE);   
  tft.drawRect(25+(x*110),195,95,95,WHITE);
}

  tft.setCursor(45, 275);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("4");
  
  tft.setCursor(155, 275);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("5");

  tft.setCursor(265, 275);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(2);
  tft.println("6");


// Draw the 3 buttons
  for (x=0; x<3; x++)
 {
  
 tft.fillRoundRect(360,70+(x*85),100,70,6,BLUE); 
 tft.drawRoundRect(360,70+(x*85),100,70,6,WHITE); 
 //tft.setTextColor(CYAN);
  
 }

  tft.setCursor(375, 110);
  tft.setTextColor(GREEN);
  tft.setFont(&FreeMonoBold12pt7b);
  tft.setTextSize(1);
  tft.println("Enter");
  
  tft.setCursor(370, 195);
  tft.setTextColor(RED);
  tft.setFont(&FreeMonoBold12pt7b);
  tft.setTextSize(1);
  tft.println("Cancel");

  tft.setCursor(380, 280);
  tft.setTextColor(WHITE);
  tft.setFont(&FreeMonoBold12pt7b);
  tft.setTextSize(1);
  tft.println("Back");




}
//


void Showing(){
  tft.fillScreen(BLACK);
  
  tft.setCursor(80, 100);
  tft.setTextSize(1);
  tft.setTextColor(RED);
  tft.setFont(&FreeSansBold24pt7b);
  tft.println("ENGR 697G - 05");

  tft.setCursor(120, 200);
  tft.setTextColor(YELLOW);
  tft.setFont(&FreeSansBold24pt7b);
  tft.setTextSize(1);
  tft.println("Final Project");

  tft.setCursor(190, 300);
  tft.setTextSize(1);
  tft.setTextColor(RED);
  tft.println("Demo");
  
  delay(4000);
  
  tft.fillScreen(BLACK);
  tft.setCursor(0, 50);
  tft.setTextColor(ORANGE);
  tft.setTextSize(1);
  tft.setFont(&FreeMonoBold12pt7b);
  tft.println("ENGR 697G-05 Engineering Design");
  tft.println("             Project II - SP2021");
  tft.setTextColor(BLUE);
  tft.println("Instructor:");
  tft.setTextColor(GREEN);
  tft.println("Dr. Hamid Mahmoodi");
  
  tft.setCursor(0, 190);
  tft.setTextColor(YELLOW);
  tft.println("Smart Rotary Parking Team");
  tft.setTextColor(BLUE);
  tft.println("Team Member:");
  tft.setTextColor(GREEN);
  tft.print("Yunjie Li & Bao Chau");
  
  delay(5000);
  
}
